name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Run Docker build and lint
        run: |
          docker build -f infra/backend.Dockerfile -t backend-test .
          docker build -f infra/worker.Dockerfile -t worker-test .
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8 on backend and worker
        run: |
          flake8 backend
          flake8 worker
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache frontend dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install frontend dependencies and run lint
        run: |
          cd frontend
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-
      - name: Install flake8
        run: pip install flake8
      - name: Install backend and worker dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install -r worker/requirements.txt
          pip install pytest pytest-cov
      - name: Run pytest in backend with coverage
        run: |
          pytest backend --cov=backend --cov-report=xml --cov-report=html
      - name: Run pytest in worker with coverage
        run: |
          pytest worker --cov=worker --cov-report=xml --cov-report=html
      - name: Upload coverage to Codecov (Python)
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: python-backend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend dependencies and run tests
        run: |
          cd frontend
          npm ci
          npm test -- --coverage --watchAll=false
      - name: Upload coverage to Codecov (Frontend)
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: react-frontend