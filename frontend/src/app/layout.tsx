import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ErrorBoundary from "../components/ErrorBoundary"; // Error boundary to catch unhandled exceptions in the React tree

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  // Note: If user data is used in metadata (e.g., dynamic title or description),
  // sanitize it using DOMPurify to prevent XSS. Example:
  // DOMPurify.sanitize(userProvidedTitle || "Default Title")
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased flex`}>
        {/* Sidebar Navigation */}
        <nav className="w-64 bg-gray-800 text-white p-4 min-h-screen">
          <h2 className="text-2xl font-bold mb-6">FixMyDocs</h2>
          <ul>
            <li className="mb-2">
              <a href="/dashboard" className="block hover:text-blue-300">Dashboard</a>
            </li>
            <li className="mb-2">
              <a href="/repos" className="block hover:text-blue-300">Repositories</a>
            </li>
            <li className="mb-2">
              <a href="/jobs" className="block hover:text-blue-300">Jobs</a>
            </li>
          </ul>
        </nav>
        {/* Main content area wrapped with ErrorBoundary to catch unhandled exceptions */}
        <main className="flex-1">
          <ErrorBoundary>
            {children}
          </ErrorBoundary>
        </main>
      </body>
    </html>
  );
}
